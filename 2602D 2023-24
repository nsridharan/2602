/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       VEX                                                       */
/*    Created:      Thu Sep 26 2019                                           */
/*    Description:  Competition Template                                      */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// Controller1          controller                    
// ---- END VEXCODE CONFIGURED DEVICES ----

#include "vex.h"

using namespace vex;

// A global instance of competition
competition Competition;

// define your global instances of motors and other devices here
motor LeftRMotor = motor(PORT1, ratio6_1, false);
motor LeftFMotor = motor(PORT2, ratio6_1, false);
motor RightRMotor = motor(PORT3, ratio6_1, false);
motor RightFMotor = motor(PORT4, ratio6_1, false);
motor IntakeMotor = motor(PORT5, ratio6_1, false);
controller Controller1 = controller(primary);

void pre_auton(void) {
  // Initializing Robot Configuration. DO NOT REMOVE!
  vexcodeInit();
  // All activities that occur before the competition starts
  
}
void autonomous(void) {
   
}
void usercontrol(void) {
  while (1) {
    //Drivetrain Code
        double left_stick = Controller1.Axis3.position(); 
        double right_stick = Controller1.Axis1.position(); 
        double left_speed = left_stick;
        double right_speed = left_stick;
        left_speed += right_stick;
        right_speed -= right_stick;
        LeftFMotor.spin(vex::directionType::fwd, left_speed, vex::velocityUnits::pct);
        LeftRMotor.spin(vex::directionType::fwd, left_speed, vex::velocityUnits::pct);
        RightFMotor.spin(vex::directionType::fwd, right_speed, vex::velocityUnits::pct);
        RightRMotor.spin(vex::directionType::fwd, right_speed, vex::velocityUnits::pct);
    //Intake Code
    if(Controller1.ButtonL1.pressing()){
      IntakeMotor.setVelocity(100,pct);
      IntakeMotor.spin(forward);
    }
    else if(Controller1.ButtonL2.pressing()){
      IntakeMotor.setVelocity(100,pct);
      IntakeMotor.spin(reverse);
    }
    else{
      IntakeMotor.stop();
    }
    wait(20, msec);
}
  }
// Main will set up the competition functions and callbacks.
int main() {
  // Set up callbacks for autonomous and driver control periods.
  Competition.autonomous(autonomous);
  Competition.drivercontrol(usercontrol);

  // Run the pre-autonomous function.
  pre_auton();

  // Prevent main from exiting with an infinite loop.
  while (true) {
    wait(100, msec);
  }
}
